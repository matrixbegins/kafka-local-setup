---
  version: '2'

  services:
    zookeeper:
      image: confluentinc/cp-zookeeper:6.1.1
      hostname: zookeeper
      container_name: zookeeper
      networks:
        - confluent
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

    broker:
      image: confluentinc/cp-kafka:6.1.1
      hostname: broker
      container_name: broker
      networks:
        - confluent
      depends_on:
        - zookeeper
      ports:
          - "29092:29092"
          - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        # KAFKA_LISTENERS: INTERNAL://broker:29092,EXTERNAL://localhost:9092    # change to 0.0.0.0 if other machines will connect here
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:29092,EXTERNAL://localhost:9092 # change to 0.0.0.0 if other machines will connect here
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

    schema-registry:
      image: confluentinc/cp-schema-registry:6.1.1
      hostname: schema-registry
      container_name: schema-registry
      networks:
        - confluent
      depends_on:
        - zookeeper
        - broker
      ports:
        - "8081:8081"
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        # SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://broker:29092"

    ksqldb-server:
      image: confluentinc/ksqldb-server:0.17.0
      hostname: ksqldb-server
      container_name: ksqldb-server
      networks:
        - confluent
      depends_on:
        - broker
        - schema-registry
      ports:
        - "8088:8088"
      environment:
        KSQL_LISTENERS: "http://0.0.0.0:8088"
        KSQL_BOOTSTRAP_SERVERS: "broker:29092"
        KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
        KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
        # Configuration to embed Kafka Connect support.
        KSQL_CONNECT_GROUP_ID: "ksql-connect-cluster"
        KSQL_CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
        KSQL_CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
        KSQL_CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
        KSQL_CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        KSQL_CONNECT_CONFIG_STORAGE_TOPIC: "_ksql-connect-configs"
        KSQL_CONNECT_OFFSET_STORAGE_TOPIC: "_ksql-connect-offsets"
        KSQL_CONNECT_STATUS_STORAGE_TOPIC: "_ksql-connect-statuses"
        KSQL_CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
        KSQL_CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
        KSQL_CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
        KSQL_CONNECT_PLUGIN_PATH: "/usr/share/kafka/plugins"

    ksqldb-cli:
      image: confluentinc/ksqldb-cli:0.17.0
      container_name: ksqldb-cli
      networks:
        - confluent
      depends_on:
        - broker
        - ksqldb-server
      entrypoint: /bin/sh
      tty: true

    connect:
      hostname: connect
      image: confluentinc/cp-kafka-connect
      container_name: kafka_connect
      networks:
        - confluent
      depends_on:
          - broker
          - ksqldb-server
          - schema-registry
      ports:
          - '8083:8083'
      environment:
          CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
          CONNECT_REST_ADVERTISED_HOST_NAME: target-connect
          CONNECT_PRODUCER_COMPRESSION_TYPE: lz4
          CONNECT_GROUP_ID: connect
          CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
          CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
          CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
          CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
          CONNECT_CONFIG_STORAGE_TOPIC: connect_config
          CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
          CONNECT_OFFSET_STORAGE_TOPIC: connect_offset
          CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
          CONNECT_STATUS_STORAGE_TOPIC: connect_status
          CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
          CONNECT_LOG4J_LOGGERS: 'org.reflections=ERROR'

    control-center:
      image: confluentinc/cp-enterprise-control-center
      networks:
        - confluent
      depends_on:
          - zookeeper
          - broker
          - connect
      ports:
          - "9022:9021"
      environment:
          CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081/"
          CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:29092"
          CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
          CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
          CONTROL_CENTER_REPLICATION_FACTOR: 1
          CONTROL_CENTER_KSQL_ENABLE: "false"


  networks:
    confluent:
      driver: bridge

